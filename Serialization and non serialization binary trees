When we want to save a binary tree as a string in a certain format according to a certain traversal method, the binary tree established in memory can be preserved permanently. 
Serialization can be modified based on binary tree traversal of first order, middle order, second order and sequence. The result of serialization is a string. 
When serializing, empty nodes (‡∑è) are represented by some symbol, and then! Represents the end of a node value (value!).
code's as follows:
/*
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
import java.util.*;
public class Solution {
    int index=-1;
    String Serialize(TreeNode root) {
        if(root==null){
            return "";
        }
        //String st="";
        StringBuilder st = new StringBuilder();
        string(root,st);
        return st.toString();
        
  }
    void string (TreeNode root, StringBuilder str){
        if(root==null){
            str.append("#!");
            return ;
        }
        str.append(root.val).append("!");
        string(root.left,str);
        string(root.right,str);
    }
    TreeNode Deserialize(String str) {
       if(str.length()==0||str==""){
           return null;
       }
        String [] string = str.split("!");
        return deser(string);
        
  }
    TreeNode deser(String [] str){
        index++;
        if(!str[index].equals("#")){
            TreeNode node = new TreeNode(Integer.parseInt(str[index]));
            node.left= deser(str);
            node.right=deser(str);
            return node;
        }
        return null;
        
    } 
}
